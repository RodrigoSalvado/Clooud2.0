name: Deploy Bicep com Azure e VNet + Private Endpoints

on:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      - name: Checkout do repositório
        uses: actions/checkout@v4

      # 2. Login no Azure via OIDC
      - name: Login no Azure com Login v2 (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 3. Validar templates Bicep
      - name: Validar templates Bicep
        run: |
          az bicep install || true
          az bicep build --file templates/resource-group.bicep
          az bicep build --file templates/vnet-with-subnets.bicep
          az bicep build --file templates/storage-account.bicep
          az bicep build --file templates/storage-private-endpoint.bicep
          az bicep build --file templates/app-service-plan.bicep
          az bicep build --file templates/web-app.bicep

      # 4. Deploy do Resource Group
      - name: Deploy Resource Group
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment sub create \
              --location westeurope \
              --template-file templates/resource-group.bicep \
              --parameters rgName='MiniProjetoCloud2.0' location='westeurope'

      # 5. Deploy da VNet com subnets e NSGs
      - name: Deploy VNet com Subnets
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group MiniProjetoCloud2.0 \
              --template-file templates/vnet-with-subnets.bicep \
              --parameters \
                  vnetName='myVNet' \
                  addressPrefix='10.0.0.0/16' \
                  privateSubnetName='private-subnet' \
                  privateSubnetPrefix='10.0.1.0/24' \
                  publicSubnetName='public-subnet' \
                  publicSubnetPrefix='10.0.2.0/24'

      # 6. Deploy da Storage Account + container
      - name: Deploy Storage Account + Container
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group MiniProjetoCloud2.0 \
              --template-file templates/storage-account.bicep \
              --parameters \
                  storageAccountName='miniprojetostorage20' \
                  containerName='reddit-posts' \
                  enableBlobVersioning=true \
                  blobSoftDeleteDays=7

      # 7. Deploy do Private Endpoint para Storage + Private DNS Zone
      - name: Deploy Private Endpoint para Storage
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group MiniProjetoCloud2.0 \
              --template-file templates/storage-private-endpoint.bicep \
              --parameters \
                  privateEndpointName='pe-storage' \
                  storageAccountName='miniprojetostorage20' \
                  vnetName='myVNet' \
                  subnetName='private-subnet'

      # 8. Deploy do App Service Plan
      - name: Deploy App Service Plan
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group MiniProjetoCloud2.0 \
              --template-file templates/app-service-plan.bicep \
              --parameters \
                  planName='ASP-MiniProjetoCloud2.0' \
                  skuTier='Basic' \
                  skuName='B2' \
                  capacity=1 \
                  isLinux=true

      # 9. (Opcional) Gerar SAS para o container ou usar Managed Identity
      - name: Gerar User Delegation SAS para o container (opcional)
        id: gen_sas
        run: |
          ACCOUNT_NAME="miniprojetostorage20"
          CONTAINER_NAME="reddit-posts"
          EXPIRY=$(date -u -d "1 day" '+%Y-%m-%dT%H:%MZ')
          sasToken=$(az storage container generate-sas \
            --account-name $ACCOUNT_NAME \
            --name $CONTAINER_NAME \
            --permissions racld \
            --expiry $EXPIRY \
            --https-only \
            --auth-mode login \
            --as-user \
            -o tsv)
          echo "containerSasToken=$sasToken" >> $GITHUB_OUTPUT

      # 10. Deploy do Web App com VNet Integration e App Settings
      - name: Deploy Web App com VNet Integration
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group MiniProjetoCloud2.0 \
              --template-file templates/web-app.bicep \
              --parameters \
                  webAppName='minhaapp-rodrig0salv' \
                  imageName='rodrig0salv/minha-app:latest' \
                  containerSasToken='${{ steps.gen_sas.outputs.containerSasToken }}' \
                  storageAccountName='miniprojetostorage20' \
                  containerName='reddit-posts' \
                  vnetName='myVNet' \
                  subnetName='private-subnet'
